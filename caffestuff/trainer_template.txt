name: "LeNet"
layer {
  name: "{{script_name}}"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: {{ scale }}
  }
  data_param {
    source: "dummy/data/digits/dummy_train_lmdb"
    batch_size: {{ batch_size }}
    backend: LMDB
  }
}
layer {
  name: "{{mnist_name}}"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: {{ scale }}
  }
  data_param {
    source: "dummy/data/digits/dummy_val_lmdb"
    batch_size: {{ batch_size }}
    backend: LMDB
  }
}
layer {
  name: "{{conv1_name}}"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 6
    kernel_size: {{ conv1_kernel_size }}  
    stride: {{ conv1_stride }}
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}


layer {
  name: "{{pool1_name}}"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: {{ pool1_kernel_size }} 
    stride: {{ pool1_stride }}
  }
}
layer {
  name: "{{conv2_name}}"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 16
    kernel_size: {{ conv2_kernel_size }}  
    stride: {{ conv2_stride }}
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}


layer {
  name: "{{pool2_name}}"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: {{ pool2_kernel_size }} 
    stride: {{ pool2_stride }}
  }
}


layer {
  name: "{{conv3_name}}"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 120
    kernel_size: {{ conv3_kernel_size }}  
    stride: {{ conv3_stride }}
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}


layer {
  name: "{{ip1_name}}"
  type: "InnerProduct"
  bottom: "conv3"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 84
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "{{relu1_name}}"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}

layer {
  name: "{{ip2_name}}"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10 
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "{{accuracy_name}}"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "{{loss_name}}"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
